-- Create todolist table to hold groups of todos
create table todolists (
  id bigint generated by default as identity primary key,
  user_id uuid references auth.users not null,
  title text check (char_length(title) > 1),
  description text,
  inserted_at timestamp with time zone default timezone('utc'::text, now()) not null
);

-- Enable row level security on todolists
alter table todolists enable row level security;

-- Create RLS policies similar to todos table
create policy "Individuals can create todolists." on todolists for
    insert with check (auth.uid() = user_id);

create policy "Individuals can view their own todolists." on todolists for
    select using (auth.uid() = user_id);

create policy "Individuals can update their own todolists." on todolists for
    update using (auth.uid() = user_id);

create policy "Individuals can delete their own todolists." on todolists for
    delete using (auth.uid() = user_id);

-- Create default todolists for existing users with todos
INSERT INTO todolists (user_id, title, description)
SELECT DISTINCT user_id, 'My todos', 'Default todolist'
FROM todos;

-- Alter todos table to reference todolists
alter table todos add column todolist_id bigint references todolists;

-- Update existing todos to reference their owner's default todolist
UPDATE todos 
SET todolist_id = tl.id 
FROM todolists tl 
WHERE todos.user_id = tl.user_id AND tl.title = 'My todos';

-- Create index for faster lookups
create index todos_todolist_id_idx on todos(todolist_id);